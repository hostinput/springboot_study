<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.UserMapper">

    <!--<resultMap id="getUsersRolesPermission" type="com.example.springboot.model.User">

        <result property="status" column="ustatus"/>
        <result property="id" column="uid"/>
        <collection property="roleList" ofType="com.example.springboot.model.Role">
            <result column="id" property="rid"/>
            <result column="rstatus" property="status"/>
        </collection>
    </resultMap>-->
    <select id="getRoleListByUserId" resultType="com.example.springboot.model.Role" parameterType="long">
        SELECT
            r.id,
            r.role_id,
            r.name,
            r.description,
            r.status,
            r.create_time,
            r.update_time
        FROM
            USER AS u
                LEFT JOIN user_role as ur ON u.id = ur.user_id
                LEFT JOIN role AS r ON ur.role_id = r.id
        WHERE u.id = #{id}
    </select>

    <select id="getPermissionListByRoleId" resultType="com.example.springboot.model.Permission" parameterType="long">
        SELECT
            p.id,
            p.icon,
            p.description,
            p.name,
            p.create_time,
            p.order_num,
            p.parent_id,
            p.permission_id,
            p.url,
            p.perms,
            p.STATUS,
            p.type,
            p.update_time
        FROM
            USER AS u
                LEFT JOIN user_role AS ur ON u.id = ur.user_id
                LEFT JOIN role AS r ON ur.role_id = r.id
                LEFT JOIN role_permission AS rp ON rp.role_id = r.id
                LEFT JOIN permission AS p ON p.id = rp.permission_id
        WHERE
            u.id = #{id}
    </select>


    <insert id="save" parameterType="com.example.springboot.model.User" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
        insert into user
        (user_id, username, password, salt, email, phone, sex, age, status, create_time, update_time, last_login_time)
        values
        (#{userId}, #{username}, #{pwssword}, #{salt}, #{email}, #{phone}, #{sex}, #{age}, #{status}, #{createTime},
         #{updateTime}, #{lastLoginTime})
    </insert>

    <select id="findUserById" resultType="com.example.springboot.model.User" parameterType="long">
        select id,
               user_id,
               username,
               password,
               salt,
               email,
               phone,
               sex,
               age,
               status,
               create_time,
               update_time,
               last_login_time
        from user
        where id = #{id}
    </select>

    <select id="getUserByLoginName" resultType="com.example.springboot.model.User" parameterType="string">
        select id,
               user_id,
               username,
               password,
               salt,
               email,
               phone,
               sex,
               age,
               status,
               create_time,
               update_time,
               last_login_time
        from user
        where username = #{username}
    </select>

    <select id="getAllUsers" resultType="com.example.springboot.model.User">
        select *
        from user
    </select>

</mapper>